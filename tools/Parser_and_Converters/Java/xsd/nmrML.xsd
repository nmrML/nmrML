<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:dx="http://nmrml.org/schema" attributeFormDefault="unqualified"
  elementFormDefault="qualified" targetNamespace="http://nmrml.org/schema" version="1.0.rc1"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://nmrml.org/schema">
  <xs:element name="nmrML" type="nmrMLType">
    <xs:annotation>
      <xs:documentation>This is the root element for the COordination Of Standards In MetabOlomicS
        nmrML schema, which is intended to capture the use of a nuclear magnetic resonance
        spectrometer, the data generated, and the initial processing of that data (to the level of
        the peak list).</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="QuantifiedCompoundType">
    <xs:complexContent>
      <xs:extension base="ChemicalCompoundType">
        <xs:sequence>
          <xs:element name="concentration" type="ValueWithUnitType"/>
          <xs:element minOccurs="0" name="clusterList" type="ClusterListType">
            <xs:annotation>
              <xs:documentation>A list of clusters of peaks that are aligned with the spectrum for quantification.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="peakList" type="PeakListType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>A list of the positions and amplitudes of the peaks that are associated with the compound. This is an alternative to the cluster list for the case where you want to record a fit but discard some of the information about the library you used to fit the spectrum.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ClusterListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="cluster" type="ClusterType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClusterType">
    <xs:sequence>
      <xs:element name="peakList" type="PeakListType">
        <xs:annotation>
          <xs:documentation>A list of the positions and amplitudes of the peaks in the multiplet. Optional if the peaks are not identified. In which case the 'center' attribute offers a hint for annotation.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="center"/>
    <xs:attribute name="shift"/>
  </xs:complexType>
  <xs:complexType name="ChemicalCompoundType">
    <xs:sequence minOccurs="1">
      <xs:element name="identifierList" type="CompoundIdentifierListType" minOccurs="0"> </xs:element>
      <xs:element name="structure" type="CompoundStructureType" minOccurs="0"> </xs:element>
    </xs:sequence>
    <xs:attribute name="name"/>
  </xs:complexType>
  <xs:complexType name="CompoundStructureType">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="atomList" maxOccurs="1" minOccurs="1" type="AtomListType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="bondList" type="BondListType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AtomListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="atom" type="AtomType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AtomType">
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>An identifier unique to the file only, so that it can be referenced by the bond elements as well as by the spectrum annotations. Most people use "a1", "a2", ... , "aN"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="elementType" use="required">
      <xs:annotation>
        <xs:documentation>The symbol for the element. For example: "H","C" or "Fe"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="x" use="required">
      <xs:annotation>
        <xs:documentation>The x position of the element in cartesian coordinates. The cordinates along with the bond information in the bond list should allow for software to draw a 2D representation of the chemical structure.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="y" use="required">
      <xs:annotation>
        <xs:documentation>The y position of the element in cartesian coordinates. The cordinates along with the bond information in the bond list should allow for software to draw a 2D representation of the chemical structure.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="BondListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="bond" type="BondType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BondType">
    <xs:attribute name="atomRefs" use="required">
      <xs:annotation>
        <xs:documentation>Contains a list of atom IDs seperated by a space. The atom ids are the atoms connected by the bond. For example: "a1 a2"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="order" use="required">
      <xs:annotation>
        <xs:documentation>The order of the bond connecting two atoms. A single bond should be "1", a double bond should be "2", a triple bond should be "3".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AtomAssignmentListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="multiplet" type="MultipletType">
        <xs:annotation>
          <xs:documentation>A cluster of 1 or more peaks that corresponds to specific atoms in a chemical structure.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MultipletType">
    <xs:sequence>
      <xs:element name="atoms" type="AtomRefsType">
        <xs:annotation>
          <xs:documentation>Lists the atomRefs for atoms in the chemical structure that contribute to the multiplet.

If the corresponding atoms are unknown than the list can be blank.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="multiplicity" type="CVTermType">
        <xs:annotation>
          <xs:documentation>A description of the type of multiplet that is annotated. For exmample a singlet, a doublet, a doublet of doublets, etc.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="peakList" type="PeakListType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A list of the positions and amplitudes of the peaks in the multiplet. Optional if the peaks are not identified. In which case the 'center' attribute offers a hint for annotation.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="center" use="required">
      <xs:annotation>
        <xs:documentation>The center of the multiplet in ppm.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AtomRefsType">
    <xs:attribute name="atomRefs"/>
  </xs:complexType>
  <xs:complexType name="PeakType">
    <xs:attribute name="center" use="required"/>
    <xs:attribute name="amplitude"/>
    <xs:attribute name="width"/>
  </xs:complexType>
  <xs:complexType name="PeakListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="peak" type="PeakType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AtomAssingmentAnnotationType">
    <xs:sequence>
      <xs:element name="chemicalCompound" type="ChemicalCompoundType"/>
      <xs:element name="atomAssignmentList" type="AtomAssignmentListType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>A list of annotated peak clusters in the spectrum and the atoms that they correspond to. </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="spectrumRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the id of the spectrum that this annotation is for.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="InChiStringType">
    <xs:annotation>
      <xs:documentation>Captures the compound structure as an InChI, which allows for capturing a chemical structure as a string example:

InChI=1S/C7H11N3O2/c1-10-3-5(9-4-10)2-6(8)7(11)12/h3-4,6H,2,8H2,1H3,(H,11,12)/t6-/m0/s1</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="CompoundIdentifierListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="identifier" type="CVTermType">
        <xs:annotation>
          <xs:documentation>Captures compound identifiers coming from an ontology. Usually CHEBI. 

Example:
<compoundIdentifier accession="CHEBI:16449" cvRef="CHEBI"/></xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="databaseIdentifier"
        type="CompoundDatabaseIdentifierType"> </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CompoundDatabaseIdentifierType">
    <xs:annotation>
      <xs:documentation>Captures a database identifier and reference via URI.

Example:

<compoundDatabaseIdentifier databaseID="HMDB00067" databaseURI="http://hmdb.ca/metabolites/HMDB00067"/></xs:documentation>
    </xs:annotation>
    <xs:attribute name="identifier" use="required"/>
    <xs:attribute name="URI" use="required"/>
  </xs:complexType>
  <xs:complexType name="QuantificationAnnotationType">
    <xs:sequence>
      <xs:element name="quantificationMethod" type="CVTermType"/>
      <xs:element name="quantifiedCompoundList" type="QuantifiedCompoundListType">
        <xs:annotation>
          <xs:documentation>A list of the quantified chemical compounds and the associated information about clusters of peaks in the spectrum.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="spectrumRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the id of the spectrum that this annotation is for.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="QuantifiedCompoundListType">
    <xs:annotation>
      <xs:documentation>Caputures information about analytes that have been quantified in a mixture. The infromation is about quantification and identification of the analytes.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="quantifiedCompound" type="QuantifiedCompoundType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SpectrumAnnotationListType">
    <xs:sequence>
      <xs:element name="atomAssignment" minOccurs="0" type="AtomAssingmentAnnotationType">
        <xs:annotation>
          <xs:documentation>An annotation for assigning atoms in a chemical structure to peaks in a spectrum.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quantification" type="QuantificationAnnotationType">
        <xs:annotation>
          <xs:documentation>An annotation for capturing the quantification of a complex mixture in an NMR experiment. The annotation captures the alighnment of clusters of peaks to the spectrum, the associated chemical compounds, and the quantification information. </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="nmrMLType">
    <xs:annotation>
      <xs:documentation>This is the root element for the COordination Of Standards In MetabOlomicS
        nmrML schema, which is intended to capture the use of a nuclear magnetic resonance
        spectrometer, the data generated, and the initial processing of that data (to the level of
        the peak list).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cvList" type="dx:CVListType"/>
      <xs:element name="fileDescription" type="FileDescriptionType"/>
      <xs:element maxOccurs="1" minOccurs="0" name="contactList" type="ContactListType"/>
      <xs:element minOccurs="0" name="referenceableParamGroupList"
        type="ReferenceableParamGroupListType"/>
      <xs:element minOccurs="0" name="sourceFileList" type="SourceFileListType"/>
      <xs:element name="softwareList" type="SoftwareListType" minOccurs="0"/>
      <xs:element name="instrumentConfigurationList" type="InstrumentConfigurationListType"/>
      <xs:element minOccurs="0" name="sampleList" type="SampleListType"/>
      <xs:element name="acquisition" type="AcquisitionType"/>
      <xs:element minOccurs="0" name="spectrumList" type="SpectrumListType">
        <xs:annotation>
          <xs:documentation>A list of frequency domain spectrum data as well as information about how the spectrum was processed. There can be more than one do to different techniques for processing the FID data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="spectrumAnnotationList" type="SpectrumAnnotationListType"/>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The nmrML version used to create the document.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string">
      <xs:annotation>
        <xs:documentation>Optional accession number for the nmrML document. Used for storage (for
          example MetaboLights) </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession_url" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>Optional attribute for retrieva of an nmrML document. Usefull when the
          document has been retrieved from a public database.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:string">
      <xs:annotation>
        <xs:documentation>An optional ID for the nmrML document.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVListType">
    <xs:annotation>
      <xs:documentation>Container for one or more controlled vocabulary
        definitions.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="cv" type="dx:CVType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CVType">
    <xs:annotation>
      <xs:documentation>Information about an ontology or CV source and a short 'lookup' tag to refer
        to.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>The short label to be used as a reference tag with which to refer to this
          particular Controlled Vocabulary source description (e.g., from the cvLabel attribute, in
          CVParamType elements).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fullName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The usual name for the resource (e.g. The MSI-NMR Controlled
          Vocabulary).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The version of the CV from which the referred-to terms are
          drawn.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="URI" type="xs:anyURI" use="required">
      <xs:annotation>
        <xs:documentation>The URI for the resource.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ContactListType">
    <xs:sequence minOccurs="1">
      <xs:element name="contact" type="dx:ContactType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContactType">
    <xs:annotation>
      <xs:documentation>A person's name and information on how to communicate with
        them.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ParamGroupType">
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this contact .</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="fullname" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Name of the contact person.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="url" type="xs:anyURI">
          <xs:annotation>
            <xs:documentation>Uniform Resource Locator related to the contact person or
              organization.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="address" type="xs:string">
          <xs:annotation>
            <xs:documentation>Postal address of the contact person or
              organization.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="organization" type="xs:string">
          <xs:annotation>
            <xs:documentation>Home institution of the contact person.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="email" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Email address of the contact person or
              organization.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ContactRefType">
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must reference the 'id' of the contact node in the
          contactList.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ContactRefListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="contactRef" type="ContactRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined sourceFile.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FileDescriptionType">
    <xs:annotation>
      <xs:documentation>Information pertaining to the entire nmrML file (i.e. not specific to any
        part of the data set) is stored here. The FileDescriptionType element is intended to contain
        a summary description of the current nmrML file, for example it could say that the file has
        a 1D FID, a processed spectra, and a peak picked spectra. It does not point to source files
        or anything like that. It is intended to make it easy to determine what is inside a file
        without having to look for different element types etc and build a summary yourself.
        RawSpectrumFile would not be a good name. nmrMLInstanceSummary might be a more intuitive
        name.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="fileContent" type="ParamGroupType">
        <xs:annotation>
          <xs:documentation>This summarizes the different types of spectra that can be expected in
            the file. This is expected to aid processing software in skipping files that do not
            contain appropriate spectrum types for it. It should also describe the nativeID format
            used in the file by referring to an appropriate CV term.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CVTermType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation as a simple CV term with no
        further values (Parameters) associated with it. Only controlled CV terms values are allowed
        here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cvRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the CV 'id' attribute as defined in the cvList in this
          nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The accession number of the referred-to term in the named resource (e.g.:
          NMR:000012).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The actual name for the parameter, from the referred-to controlled
          vocabulary. This should be the preferred name associated with the specified accession
          number.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVParamType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation. In contrast to CVTermType,
        here a pair of CV term plus a value (=Parameter) is captured. Only controlled values are
        allowed here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cvRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the CV 'id' attribute as defined in the cvList in this
          nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The accession number of the referred-to term in the named resource (e.g.:
          NMR:000012).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The actual name for the parameter, from the referred-to controlled
          vocabulary. This should be the preferred name associated with the specified accession
          number.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The value for the parameter; may be absent if not appropriate, or a
          numeric or symbolic value, or may itself be CV (legal values for a parameter should be
          enumerated and defined in the ontology).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVParamWithUnitType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation. Only controlled values are
        allowed here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cvRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the CV 'id' attribute as defined in the cvList in this
          nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The accession number of the referred-to term in the named resource (e.g.:
          NMR:000012).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The actual name for the parameter, from the referred-to controlled
          vocabulary. This should be the preferred name associated with the specified accession
          number.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The value for the parameter; may be absent if not appropriate, or a
          numeric or symbolic value, or may itself be CV (legal values for a parameter should be
          enumerated and defined in the ontology).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ValueWithUnitType">
    <xs:annotation>
      <xs:documentation>This element holds a value that also has a unit. Only controlled values are allowed for the unit.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation/>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="UserParamType">
    <xs:annotation>
      <xs:documentation>Uncontrolled user parameters (essentially allowing free text). Before using
        these, one should verify whether there is an appropriate CV term available, and if so, use
        the CV term instead</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The name for the parameter.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="valueType" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The datatype of the parameter, where appropriate (e.g.:
          xsd:float).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The value for the parameter, where appropriate.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ParamGroupType">
    <xs:annotation>
      <xs:documentation>Structure allowing the use of a controlled (cvParam) or uncontrolled
        vocabulary (userParam), or a reference to a predefined set of these in this nmrML file
        (paramGroupRef).</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0">
      <xs:element minOccurs="0" maxOccurs="unbounded" name="referenceableParamGroupRef"
        type="ReferenceableParamGroupRefType"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="cvParam" type="CVParamType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cvParamWithUnit"
        type="CVParamWithUnitType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cvTerm" type="CVTermType"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="userParam" type="UserParamType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceableParamGroupType">
    <xs:annotation>
      <xs:documentation>A collection of CVParam and UserParam elements that can be referenced from
        elsewhere in this nmrML document by using the 'paramGroupRef' element in that location to
        reference the 'id' attribute value of this element.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="cvParam" type="CVParamType"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="userParam" type="UserParamType"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>The identifier with which to reference this
          ReferenceableParamGroup.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ReferenceableParamGroupRefType">
    <xs:annotation>
      <xs:documentation>A reference to a previously defined ParamGroup, which is a reusable
        container of one or more cvParams.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>Reference to the id attribute in a
          referenceableParamGroup.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ReferenceableParamGroupListType">
    <xs:annotation>
      <xs:documentation>Container for a list of referenceableParamGroups</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="referenceableParamGroup"
        type="ReferenceableParamGroupType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SourceFileListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of the source files this nmrML document was generated
        or derived from</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="unbounded" name="sourceFile" type="dx:SourceFileType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SampleListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of samples.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="sample" type="dx:SampleType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="PhType">
    <xs:restriction base="xs:double"/>
  </xs:simpleType>
  <xs:complexType name="SampleType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="0" name="originalBiologicalSamplepH" type="PhType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="postBufferpH" type="PhType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="buffer" type="CVTermType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="fieldFrequencyLock">
        <xs:complexType>
          <xs:attribute name="fieldFrequencyLockName" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="chemicalShiftStandard" type="CVParamType"> </xs:element>
      <xs:element name="solventType" type="CVParamWithUnitType" maxOccurs="unbounded"/>
      <xs:element name="additionalSoluteList" type="AdditionalSoluteListType"/>
      <xs:element maxOccurs="1" minOccurs="0" name="concentrationStandard">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="type" type="CVTermType"/>
            <xs:element name="concentrationInSample" type="ValueWithUnitType"/>
            <xs:element name="name" type="CVTermType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="originalBiologicalSampleReference" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:complexType name="SoftwareListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of software used to acquire and/or process the data in
        this nmrML file.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="software" type="dx:SoftwareType">
        <xs:annotation>
          <xs:documentation>A software program used during the acquisition of the spectra or
            processing of the FID.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SoftwareType">
    <xs:annotation>
      <xs:documentation>Software information.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="CVTermType">
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this software that is unique across all
              SoftwareTypes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="version" type="xs:string">
          <xs:annotation>
            <xs:documentation>The software version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SoftwareRefType">
    <xs:annotation>
      <xs:documentation>Reference to a previously defined software element</xs:documentation>
    </xs:annotation>
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must be used to reference the 'id' attribute of a software
          element.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SoftwareRefListType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="softwareRef" type="SoftwareRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined sourceFile.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SourceFileType">
    <xs:annotation>
      <xs:documentation>Description of the source file, including location and type. The
        SourceFileType element is intended to be a generic element that points to a file that was
        used to produce the spectrum or the nmrML file. It could point to an FID file, a procpar
        file, a pulse program file etc. nmrExperimentSourceFile could be a good name but I
        personally think that SourceFile is an intuitive name already.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ParamGroupType">
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this file.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Name of the source file, without reference to location (either URI or
              local path).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="location" type="xs:anyURI" use="required">
          <xs:annotation>
            <xs:documentation>URI-formatted location where the file was
              retrieved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="sha1" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SourceFileRefType">
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must reference the 'id' of the appropriate
          sourceFile.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SourceFileRefListType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sourceFileRef"
        type="dx:SourceFileRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined sourceFile.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InstrumentConfigurationType">
    <xs:annotation>
      <xs:documentation>Description of a particular hardware configuration of a NMR spectrometer.
        For software configuration, use a ReferenceableParamGroup element.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ParamGroupType">
        <xs:sequence>
          <xs:element minOccurs="0" name="softwareRef" type="SoftwareRefType" maxOccurs="unbounded"
          />
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this instrument configuration.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="InstrumentConfigurationListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of instrument configurations. At least one instrument
        configuration must be specified, even if it is only to specify that the instrument is
        unknown. In that case, the "instrument model" term is used to indicate the unknown
        instrument in the instrumentConfiguration.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="instrumentConfiguration"
        type="dx:InstrumentConfigurationType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BinaryDataArrayType">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute name="compressed" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>True if the binary data was compressed with zlib before encoding as
              base64</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="encodedLength" type="xs:nonNegativeInteger" use="required">
          <xs:annotation>
            <xs:documentation>The number of characters in the base64 string. This is useful for skipping over the string in high throughput applications.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="byteFormat" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>TODO format as little endian 64 bit pairs of floats, or 32 bit pairs of floats. See online documentation for decoding examples. </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="SoluteType">
    <xs:sequence>
      <xs:element name="concentrationInSample" type="ValueWithUnitType"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="TemperatureType">
    <xs:annotation>
      <xs:documentation>A temperature and references to a unit from the unit
        ontology.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="temperature" type="xs:float" use="required"/>
    <xs:attribute name="temperatureUnitName" type="xs:string" use="required"/>
    <xs:attribute name="temperatureUnitID" type="xs:ID"/>
  </xs:complexType>
  <xs:complexType name="AdditionalSoluteListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="solute" type="SoluteType"> </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AcquisitionDimensionParameterSetType">
    <xs:annotation>
      <xs:documentation>Descriptions of the acquisition parameters set prior to the start of data
        acquisition specific to each NMR analysis dimension.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="decouplingMethod" type="CVTermType"/>
      <xs:element name="acquisitionNucleus" type="CVTermType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="effectiveExcitationField"
        type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>replacing the hardPulse parameter, would be automatically calculated
            from the pulse width in the procs file. If you say the pulse width you also have to specify the excitation angle
            so this way is more compact/useful. Should be recorded in Tesla</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="sweepWidth" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>Should be in ppm and Hz.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="pulseWidth" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>90° pulse width, measured in µs</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="irradiationFrequency" type="ValueWithUnitType"> </xs:element>
      <xs:element name="decouplingNucleus" type="CVTermType" minOccurs="0"/>
      <xs:element name="samplingStrategy" type="CVTermType"/>
      <xs:element name="samplingTimePoints" type="BinaryDataArrayType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The time domain for the samples. Allows for capturing off grid points
            and non-uniform sampling.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="decoupled" type="xs:boolean" use="required"/>
    <xs:attribute name="numberOfDataPoints" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="AcquisitionIndirectDimensionParameterSetType">
    <xs:annotation>
      <xs:documentation>Descriptions of the acquisition parameters set prior to the start of data
        acquisition specific to each NMR analysis dimension.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="acquisitionNucleus" type="CVTermType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="effectiveExcitationField"
        type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>replacing the hardPulse parameter, would be automatically calculated from the procs. If you say the pulse width you also have to specify the excitation angle so this way is more compact/useful
Parsed from Excitation width ?</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="sweepWidth" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>TODO should be in ppm and Hz.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeDomain" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The time domain for the samples. Allows for capturing off grid points
            and non-uniform sampling.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="encodingMethod" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The quadrature method.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="irradiationFrequency" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>Frequency in ppm or Hz</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="decoupled" type="xs:boolean" use="required"/>
    <xs:attribute name="acquisitionParamsFileRef" type="xs:anyURI" use="required"/>
    <xs:attribute name="numberOfDataPoints" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="AcquisitionParameterSetType">
    <xs:annotation>
      <xs:documentation>Base type for the list with the descriptions of the acquisition settings
        applied prior to the start of data acquisition.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element name="contactRefList" type="ContactRefListType" minOccurs="0"/>
      <xs:element minOccurs="0" name="softwareRef" type="SoftwareRefType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="sampleContainer" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The container used to introduc the sample into the autosampler. Example:
            tube, flow probe, rotor. Must reference a CV term. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="sampleAcquisitionTemperature"
        type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>The temperature of the sample during the acquisition.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="solventSuppressionMethod" type="CVParamType">
        <xs:annotation>
          <xs:documentation>This tag captures the instrument inherent solvent (usually water)
            suppression method used during acquisition.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="spinningRate" type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="relaxationDelay" type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="pulseSequence" type="PulseSequenceType">
        <xs:annotation>
          <xs:documentation>A description of the pulse sequence using CV params/terms, and reference
            to the pulse sequence file if the source is available. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="shapedPulseFile" type="SourceFileRefType">
        <xs:annotation>
          <xs:documentation>A reference to the pulse shape file, from the power section of the
            Bruker acquisition software. Example: gauss</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="numberOfSteadyStateScans" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>Steady state scans taken in an NMR acquisition without collecting data. Also known as dummy scans. The pulse sequence is the same for a steady state scan, the only difference is that data is not collected. (More info here: http://u-of-o-nmr-facility.blogspot.ca/2010/04/dummy-scans.html )</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="numberOfScans" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>The number of transients/scans.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AcquisitionParameterSet1DType">
    <xs:complexContent>
      <xs:extension base="AcquisitionParameterSetType">
        <xs:sequence>
          <xs:element name="DirectDimensionParameterSet" type="AcquisitionDimensionParameterSetType"
          />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AcquisitionParameterSetMultiDType">
    <xs:complexContent>
      <xs:extension base="AcquisitionParameterSetType">
        <xs:sequence>
          <xs:element minOccurs="0" name="hadamardParameterSet">
            <xs:annotation>
              <xs:documentation>TODO needs to be a list of frequencies, but could allow for other
                parameters. </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="hadamardFrequency"
                  type="ValueWithUnitType">
                  <xs:annotation>
                    <xs:documentation>Required if and only if the encoding type is
                      Hadamard.</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="directDimensionParameterSet" type="AcquisitionDimensionParameterSetType"/>
          <xs:element minOccurs="1" name="encodingScheme" type="CVParamType">
            <xs:annotation>
              <xs:documentation>Quadrature detection method.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="indirectDimensionParameterSet"
            type="AcquisitionDimensionParameterSetType">
            <xs:annotation>
              <xs:documentation>Required once for each indirect dimension that is
                measured.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType mixed="false" name="PulseSequenceType">
    <xs:annotation>
      <xs:documentation>A list of references to the source files that define the pulse sequence,
        including pulse shape files, pulse sequence source code, pulse sequence parameter files,
        etc.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ParamGroupType"> </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AcquisitionType">
    <xs:choice maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="1" name="acquisition1D" type="Acquisition1DType"> </xs:element>
      <xs:element maxOccurs="1" name="acquisitionMultiD" type="AcquisitionMultiDType"> </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="Acquisition1DType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="1" name="acquisitionParameterSet"
        type="AcquisitionParameterSet1DType">
        <xs:annotation>
          <xs:documentation>Note, steady state scan is also know as dummy scan.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fidData" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The FID is stored here as a binary blob. Byte ordering is always little endian (Intel style). Computers using a different endian style must convert to/from little endian when writing/reading nmrML. The FID should be converted into a Complex64 array before encoding. The base64 encoded binary data. The byte order is always 'little endian'.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AcquisitionMultiDType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="1" name="acquisitionParameterSet"
        type="AcquisitionParameterSetMultiDType"> </xs:element>
      <xs:element name="fidData" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The FID is stored here as a binary blob. Byte ordering is always little
            endian (Intel style). Computers using a different endian style must convert to/from
            little endian when writing/reading nmrML. The FID should be converted into a Complex64
            array before encoding. The base64 encoded binary data. The byte order is always 'little
            endian'.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SpectrumListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of spectra.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="spectrum1D" type="Spectrum1DType"/>
      <xs:element name="spectrumMultiD" type="SpectrumMultiDType" maxOccurs="unbounded"
        minOccurs="0"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="SpectrumType">
    <xs:annotation>
      <xs:documentation>A spectrum that is the result of processing the acquisition and a
        description of the process used to create it.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element minOccurs="0" name="processingSoftwareRefList" type="SoftwareRefListType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="spectrumDataArray" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The 1D spectrum is represented as either a set of y-axis values at equal
            x-axis intervals or a set of (x,y) pairs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <!-- Set back the section xAxis ( AxisWithUnitType ) that had been previously removed. We need it to rebuild the ppm scale -->
      <xs:element name="xAxis" type="AxisWithUnitType"/>
      <xs:element name="processingParameterSet" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional information about processing that was used to create the frequency domain spectrum.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="postAcquisitionSolventSuppressionMethod" type="CVTermType"
              minOccurs="0">
              <xs:annotation>
                <xs:documentation>The method used for post acquisition solvent
                  suppression.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="calibrationCompound" type="CVTermType" minOccurs="0"/>
            <xs:element name="dataTransformationMethod" type="CVTermType" minOccurs="0">
              <xs:annotation>
                <xs:documentation>The method used for time-based to frequency-based data transformation.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="numberOfDataPoints" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>The number of (x,y) points in the spectrum. This is needed to read the binary data.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>An ID for the spectrum so that it can be referenced within the file for spectrum annotations.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>A (optional) name so that it can be differentiated other than by its rank if multiple spectra are embedded within the file</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SpectrumRefType">
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must reference the 'id' of the contact node in the
          spectrumList.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SpectrumRefListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="spectrumRef" type="SpectrumRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined SpectrumType</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Spectrum1DType">
    <xs:complexContent>
      <xs:extension base="SpectrumType">
        <xs:sequence>
          <xs:element name="firstDimensionProcessingParameterSet"
            type="FirstDimensionProcessingParameterSetType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Optional additional information about processing that was used to create the frequency domain spectrum. This information is relevant to the first dimension of data only.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SpectrumMultiDType">
    <xs:complexContent>
      <xs:extension base="SpectrumType">
        <xs:sequence>
          <xs:element name="firstDimensionProcessingParameterSet"
            type="FirstDimensionProcessingParameterSetType"/>
          <xs:element maxOccurs="2" name="higherDimensionProcessingParameterSet"
            type="HigherDimensionProcessingParameterSetType"/>
          <xs:element maxOccurs="1" minOccurs="0" name="projected3DProcessingParamaterSet"
            type="Projected3DProcessingParamaterSetType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SpectralProcessingParameterSetType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a
        spectra.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="unbounded" minOccurs="1" name="processingSoftwareRefList"
        type="SoftwareRefListType"> </xs:element>
      <xs:element name="postAcquisitionSolventSuppressionMethod" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The method used for post acquisition solvent
            suppression.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dataTransformationMethod" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The method used for time-based to frequency-based data
            tranformation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="calibrationCompound" type="CVTermType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SpectralProjectionParameterSetType">
    <xs:sequence>
      <xs:element name="projectionMethod" type="CVTermType"/>
    </xs:sequence>
    <xs:attribute name="projectionAxis"/>
  </xs:complexType>
  <xs:complexType name="SpectralProcessingParameterSet2DType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a 2D
        spectra.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="SpectralProcessingParameterSetType">
        <xs:sequence maxOccurs="1" minOccurs="1">
          <xs:element maxOccurs="1" minOccurs="1" name="directDimensionParameterSet"
            type="FirstDimensionProcessingParameterSetType"> </xs:element>
          <xs:element maxOccurs="2" minOccurs="1" name="higherDimensionParameterSet"
            type="HigherDimensionProcessingParameterSetType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="FirstDimensionProcessingParameterSetType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a spectra that
        are specific to a dimension.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="0" name="zeroOrderPhaseCorrection"
        type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="firstOrderPhaseCorrection"
        type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="calibrationReferenceShift"
        type="ValueWithUnitType"> </xs:element>
      <xs:element name="spectralDenoisingMethod" type="CVTermType" minOccurs="0"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="windowFunction">
        <xs:complexType>
          <xs:sequence maxOccurs="1" minOccurs="1">
            <xs:element name="windowFunctionMethod" type="CVTermType"/>
            <xs:element maxOccurs="unbounded" minOccurs="1" name="windowFunctionParameter"
              type="CVParamType">
              <xs:annotation>
                <xs:documentation>The parameters used in the window function
                  method.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="baselineCorrectionMethod" type="CVTermType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AxisWithUnitType">
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="startValue"/>
    <xs:attribute name="endValue"/>
  </xs:complexType>
  <xs:complexType name="HigherDimensionProcessingParameterSetType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a spectra that
        are specific to the second dimension.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="FirstDimensionProcessingParameterSetType"> </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Projected3DProcessingParamaterSetType">
    <xs:attribute name="projectionAngle" type="xs:double"/>
    <xs:attribute name="positiveProjectionMethod" type="xs:boolean"/>
  </xs:complexType>
</xs:schema>
