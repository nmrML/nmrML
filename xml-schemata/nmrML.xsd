<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:dx="http://nmrml.org/schema" attributeFormDefault="unqualified"
  elementFormDefault="qualified" targetNamespace="http://nmrml.org/schema" version="0.1.0"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://nmrml.org/schema">
  <xs:element name="nmrML" type="nmrMLType">
    <xs:annotation>
      <xs:documentation>This is the root element for the COordination Of Standards In MetabOlomicS
        nmrML schema, which is intended to capture the use of a nuclear magnetic resonance
        spectrometer, the data generated, and the initial processing of that data (to the level of
        the peak list).</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--
  <xs:element name="QualityControl">
    <xs:annotation>
      <xs:documentation>TODO need to discuss including this in aqcuisition
</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence maxOccurs="1" minOccurs="1">
        <xs:element maxOccurs="1" minOccurs="1" name="linewidth" type="ValueWithUnitType"> </xs:element>
        <xs:element maxOccurs="1" minOccurs="1" name="linewidthAt5PercentIntensity"
          type="ValueWithUnitType"> </xs:element>
      </xs:sequence>
      <xs:attribute name="signal" type="xs:string" use="required"/>
    </xs:complexType>
  </xs:element>
  -->
  <xs:complexType name="nmrMLType">
    <xs:annotation>
      <xs:documentation>This is the root element for the COordination Of Standards In MetabOlomicS
        nmrML schema, which is intended to capture the use of a nuclear magnetic resonance
        spectrometer, the data generated, and the initial processing of that data (to the level of
        the peak list).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cvList" type="dx:CVListType"/>
      <xs:element name="fileDescription" type="FileDescriptionType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="contactList" type="ContactListType"/>
      <xs:element minOccurs="0" name="referenceableParamGroupList"
        type="ReferenceableParamGroupListType"/>
      <xs:element minOccurs="0" name="sourceFileList" type="SourceFileListType"/>
      <xs:element name="softwareList" type="SoftwareListType" minOccurs="0"/>
      <xs:element name="instrumentConfigurationList" type="InstrumentConfigurationListType"/>
      <xs:element name="dataProcessingList" type="DataProcessingListType" minOccurs="0"/>
      <xs:element minOccurs="0" name="sampleList" type="SampleListType"/>
      <xs:element name="acquisition" type="AcquisitionType"/>
      <xs:element minOccurs="0" name="spectrumList" type="SpectrumListType">
        <xs:annotation>
          <xs:documentation>TODO</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="version" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The nmrML version used to create the document.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string">
      <xs:annotation>
        <xs:documentation>Optional accession number for the nmrML document. Used for storage (for
          example MetaboLights) </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession_url" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>Optional attribute for retrieva of an nmrML document. Usefull when the
          document has been retrieved from a public database.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute inheritable="true" name="id" type="xs:string">
      <xs:annotation>
        <xs:documentation>An optional ID for the nmrML document.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVListType">
    <xs:annotation>
      <xs:documentation>Container for one or more controlled vocabulary
        definitions.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="cv" type="dx:CVType"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of CV definitions in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVType">
    <xs:annotation>
      <xs:documentation>Information about an ontology or CV source and a short 'lookup' tag to refer
        to.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>The short label to be used as a reference tag with which to refer to this
          particular Controlled Vocabulary source description (e.g., from the cvLabel attribute, in
          CVParamType elements).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fullName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The usual name for the resource (e.g. The MSI-NMR Controlled
          Vocabulary).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="version" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The version of the CV from which the referred-to terms are
          drawn.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="URI" type="xs:anyURI" use="required">
      <xs:annotation>
        <xs:documentation>The URI for the resource.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ContactListType">
    <xs:sequence minOccurs="1">
      <xs:element name="contact" type="dx:ContactType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ContactType">
    <xs:annotation>
      <xs:documentation>A person's name and information on how to communicate with
        them.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ParamGroupType">
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this contact .</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="fullname" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Name of the contact person.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="url" type="xs:anyURI">
          <xs:annotation>
            <xs:documentation>Uniform Resource Locator related to the contact person or
              organization.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="address" type="xs:string">
          <xs:annotation>
            <xs:documentation>Postal address of the contact person or
              organization.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="organization" type="xs:string">
          <xs:annotation>
            <xs:documentation>Home institution of the contact person.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="email" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Email address of the contact person or
              organization.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ContactRefType">
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must reference the 'id' of the contact node in the
          contactList.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ContactRefListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="contactRef" type="ContactRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined sourceFile.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>This number of source files referenced in this list.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="FileDescriptionType">
    <xs:annotation>
      <xs:documentation>Information pertaining to the entire nmrML file (i.e. not specific to any
        part of the data set) is stored here. The FileDescriptionType element is intended to contain
        a summary description of the current nmrML file, for example it could say that the file has
        a 1D FID, a processed spectra, and a peak picked spectra. It does not point to source files
        or anything like that. It is intended to make it easy to determine what is inside a file
        without having to look for different element types etc and build a summary yourself.
        RawSpectrumFile would not be a good name. nmrMLInstanceSummary might be a more intuitive
        name.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="fileContent" type="ParamGroupType">
        <xs:annotation>
          <xs:documentation>This summarizes the different types of spectra that can be expected in
            the file. This is expected to aid processing software in skipping files that do not
            contain appropriate spectrum types for it. It should also describe the nativeID format
            used in the file by referring to an appropriate CV term.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CVTermType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation as a simple CV term with no
        further values (Parameters) associated with it. Only controlled CV terms values are allowed
        here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cvRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the CV 'id' attribute as defined in the cvList in this
          nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The accession number of the referred-to term in the named resource (e.g.:
          NMR:000012).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The actual name for the parameter, from the referred-to controlled
          vocabulary. This should be the preferred name associated with the specified accession
          number.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVParamType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation. In contrast to CVTermType,
        here a pair of CV term plus a value (=Parameter) is captured. Only controlled values are
        allowed here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cvRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the CV 'id' attribute as defined in the cvList in this
          nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The accession number of the referred-to term in the named resource (e.g.:
          NMR:000012).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The actual name for the parameter, from the referred-to controlled
          vocabulary. This should be the preferred name associated with the specified accession
          number.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The value for the parameter; may be absent if not appropriate, or a
          numeric or symbolic value, or may itself be CV (legal values for a parameter should be
          enumerated and defined in the ontology).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CVParamWithUnitType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation. Only controlled values are
        allowed here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="cvRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the CV 'id' attribute as defined in the cvList in this
          nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="accession" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The accession number of the referred-to term in the named resource (e.g.:
          NMR:000012).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The actual name for the parameter, from the referred-to controlled
          vocabulary. This should be the preferred name associated with the specified accession
          number.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The value for the parameter; may be absent if not appropriate, or a
          numeric or symbolic value, or may itself be CV (legal values for a parameter should be
          enumerated and defined in the ontology).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ValueWithUnitType">
    <xs:annotation>
      <xs:documentation>This element holds additional data or annotation. Only controlled values are
        allowed here.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation/>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="UserParamType">
    <xs:annotation>
      <xs:documentation>Uncontrolled user parameters (essentially allowing free text). Before using
        these, one should verify whether there is an appropriate CV term available, and if so, use
        the CV term instead</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The name for the parameter.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="valueType" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The datatype of the parameter, where appropriate (e.g.:
          xsd:float).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The value for the parameter, where appropriate.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ParamGroupType">
    <xs:annotation>
      <xs:documentation>Structure allowing the use of a controlled (cvParam) or uncontrolled
        vocabulary (userParam), or a reference to a predefined set of these in this nmrML file
        (paramGroupRef).</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="0">
      <xs:element minOccurs="0" maxOccurs="unbounded" name="referenceableParamGroupRef"
        type="ReferenceableParamGroupRefType"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="cvParam" type="CVParamType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cvParamWithUnit"
        type="CVParamWithUnitType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cvTerm" type="CVTermType"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="userParam" type="UserParamType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceableParamGroupType">
    <xs:annotation>
      <xs:documentation>A collection of CVParam and UserParam elements that can be referenced from
        elsewhere in this nmrML document by using the 'paramGroupRef' element in that location to
        reference the 'id' attribute value of this element.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="cvParam" type="CVParamType"/>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="userParam" type="UserParamType"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>The identifier with which to reference this
          ReferenceableParamGroup.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ReferenceableParamGroupRefType">
    <xs:annotation>
      <xs:documentation>A reference to a previously defined ParamGroup, which is a reusable
        container of one or more cvParams.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>Reference to the id attribute in a
          referenceableParamGroup.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ReferenceableParamGroupListType">
    <xs:annotation>
      <xs:documentation>Container for a list of referenceableParamGroups</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="referenceableParamGroup"
        type="ReferenceableParamGroupType"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of ParamGroups defined in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SourceFileListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of the source files this nmrML document was generated
        or derived from</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="unbounded" name="sourceFile" type="dx:SourceFileType"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>Number of source files used in generating the instance
          document.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SampleListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of samples.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="sample" type="dx:SampleType"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of Samples defined in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="PhType">
    <xs:restriction base="xs:double"/>
  </xs:simpleType>
  <xs:complexType name="SampleType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="0" name="originalBiologicalSamplepH" type="PhType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="postBufferpH" type="PhType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="buffer" type="CVTermType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="fieldFrequencyLock">
        <xs:complexType>
          <xs:attribute name="fieldFrequencyLockName" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="chemicalShiftStandard" type="CVParamType"> </xs:element>
      <xs:element name="solventType" type="CVTermType"/>
      <xs:element name="additionalSoluteList" type="AdditionalSoluteListType"/>
      <xs:element name="solventConcentration" type="ValueWithUnitType"/>
      <xs:element maxOccurs="1" minOccurs="0" name="concentrationStandard">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="type" type="CVTermType"/>
            <xs:element name="concentrationInSample" type="ValueWithUnitType"/>
            <xs:element name="name" type="CVTermType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="originalBiologicalSampleReference" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:complexType name="SoftwareListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of software used to acquire and/or process the data in
        this nmrML file.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="software" type="dx:SoftwareType">
        <xs:annotation>
          <xs:documentation>A software program used during the acquisition of the spectra or
            processing of the FID.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of softwares defined in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SoftwareType">
    <xs:annotation>
      <xs:documentation>Software information.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="CVTermType">
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this software that is unique across all
              SoftwareTypes.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="version" type="xs:string">
          <xs:annotation>
            <xs:documentation>The software version.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SoftwareRefType">
    <xs:annotation>
      <xs:documentation>Reference to a previously defined software element</xs:documentation>
    </xs:annotation>
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must be used to reference the 'id' attribute of a software
          element.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SoftwareRefListType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="softwareRef" type="SoftwareRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined sourceFile.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>This number of source files referenced in this list.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SourceFileType">
    <xs:annotation>
      <xs:documentation>Description of the source file, including location and type. The
        SourceFileType element is intended to be a generic element that points to a file that was
        used to produce the spectrum or the nmrML file. It could point to an FID file, a procpar
        file, a pulse program file etc. nmrExperimentSourceFile could be a good name but I
        personally think that SourceFile is an intuitive name already.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ParamGroupType">
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this file.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Name of the source file, without reference to location (either URI or
              local path).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="location" type="xs:anyURI" use="required">
          <xs:annotation>
            <xs:documentation>URI-formatted location where the file was
              retrieved.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="sha1" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SourceFileRefType">
    <xs:attribute name="ref" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute must reference the 'id' of the appropriate
          sourceFile.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SourceFileRefListType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="sourceFileRef"
        type="dx:SourceFileRefType">
        <xs:annotation>
          <xs:documentation>Reference to a previously defined sourceFile.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>This number of source files referenced in this list.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="InstrumentConfigurationType">
    <xs:annotation>
      <xs:documentation>Description of a particular hardware configuration of a NMR spectrometer.
        For software configuration, use a ReferenceableParamGroup element.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="ParamGroupType">
        <xs:sequence>
          <xs:element minOccurs="0" name="softwareRef" type="SoftwareRefType" maxOccurs="unbounded"
          />
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required">
          <xs:annotation>
            <xs:documentation>An identifier for this instrument configuration.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="InstrumentConfigurationListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of instrument configurations. At least one instrument
        configuration must be specified, even if it is only to specify that the instrument is
        unknown. In that case, the "instrument model" term is used to indicate the unknown
        instrument in the instrumentConfiguration.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="instrumentConfiguration"
        type="dx:InstrumentConfigurationType"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of instrument configurations present in this
          list.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="DataProcessingType">
    <xs:annotation>
      <xs:documentation>Description of the way in which a particular software was
        used.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="processingMethod" type="ProcessingMethodType">
        <xs:annotation>
          <xs:documentation>Description of the default peak processing method. This element
            describes the base method used in the generation of a particular nmrML file. Variable
            methods should be described in the appropriate acquisition section - if no
            acquisition-specific details are found, then this information serves as the
            default.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required">
      <xs:annotation>
        <xs:documentation>A unique identifier for this data processing that is unique across all
          DataProcessingTypes.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="DataProcessingListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of data processing applied to this
        data.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="dataProcessing" type="dx:DataProcessingType"/>
    </xs:sequence>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of DataProcessingTypes in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ProcessingMethodType">
    <xs:complexContent mixed="false">
      <xs:extension base="dx:ParamGroupType">
        <xs:attribute name="order" type="xs:nonNegativeInteger" use="required">
          <xs:annotation>
            <xs:documentation>This attributes allows a series of consecutive steps to be placed in
              the correct order.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="softwareRef" type="xs:IDREF" use="required">
          <xs:annotation>
            <xs:documentation>This attribute must reference the 'id' of the appropriate
              SoftwareType.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="BinaryDataArrayType">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:base64Binary">
        <xs:attribute name="compressed" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>True if the binary data was compressed with zlib before encoding as
              base64</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="dataProcessingRef" type="xs:IDREF" use="optional">
          <xs:annotation>
            <xs:documentation>This optional attribute may reference the 'id' attribute of the
              appropriate dataProcessing.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="encodedLength" type="xs:nonNegativeInteger" use="required">
          <xs:annotation>
            <xs:documentation>The encoded length of the binary data array.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="byteFormat" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>64-bit or 32-bit precision floats</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="SoluteType">
    <xs:sequence>
      <xs:element name="concentrationInSample" type="ValueWithUnitType"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="TemperatureType">
    <xs:annotation>
      <xs:documentation>A temperature and references to a unit from the unit
        ontology.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="temperature" type="xs:float" use="required"/>
    <xs:attribute name="temperatureUnitName" type="xs:string" use="required"/>
    <xs:attribute name="temperatureUnitID" type="xs:ID"/>
  </xs:complexType>
  <xs:complexType name="AdditionalSoluteListType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="solute" type="SoluteType"> </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AcquisitionDimensionParameterSetType">
    <xs:annotation>
      <xs:documentation>Descriptions of the acquisition parameters set prior to the start of data
        acquisition specific to each NMR analysis dimension.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="acquisitionNucleus" type="CVTermType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="gammaB1PulseFieldStrength"
        type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>replacing the hardPulse parameter, would be automatically calculated
            from the procs. If you say the pulse width you also have to specify the excitation angle
            so this way is more compact/useful. should be recorded in Tesla</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="sweepWidth" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>TODO should be in ppm and Hz.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="irradiationFrequency" type="ValueWithUnitType"> </xs:element>
      <xs:element minOccurs="0" name="decouplingMethod" type="CVTermType"/>
      <xs:element name="samplingStrategy" type="CVTermType"/>
      <xs:element name="samplingTimePoints" type="BinaryDataArrayType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The time domain for the samples. Allows for capturing off grid points
            and non-uniform sampling.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="decoupled" type="xs:boolean" use="required"/>
    <xs:attribute name="numberOfDataPoints" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="AcquisitionIndirectDimensionParameterSetType">
    <xs:annotation>
      <xs:documentation>Descriptions of the acquisition parameters set prior to the start of data
        acquisition specific to each NMR analysis dimension.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="acquisitionNucleus" type="CVTermType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="gammaB1PulseFieldStrength"
        type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>replacing the hardPulse parameter, would be automatically calculated
            from the procs. If you say the pulse width you also have to specify the excitation angle
            so this way is more compact/useful</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="sweepWidth" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>TODO should be in ppm and Hz.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="timeDomain" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The time domain for the samples. Allows for capturing off grid points
            and non-uniform sampling.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="encodingMethod" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The quadrature method.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="irradiationFrequency" type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>Frequency in ppm or Hz</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="decoupled" type="xs:boolean" use="required"/>
    <xs:attribute name="acquisitionParamsFileRef" type="xs:anyURI" use="required"/>
    <xs:attribute name="numberOfDataPoints" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="AcquisitionParameterSetType">
    <xs:annotation>
      <xs:documentation>Base type for the list with the descriptions of the acquisition settings
        applied prior to the start of data acquisition.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element name="contactRefList" type="ContactRefListType"/>
      <xs:element name="acquisitionParameterFileRefList" type="SourceFileRefListType"> </xs:element>
      <xs:element minOccurs="0" name="softwareRef" type="SoftwareRefType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="sampleContainer" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The container used to introduc the sample into the autosampler. Example:
            tube, flow probe, rotor. Must reference a CV term. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="sampleAcquisitionTemperature"
        type="ValueWithUnitType">
        <xs:annotation>
          <xs:documentation>The temperature of the sample during the acquisition.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="solventSuppressionMethod" type="CVParamType">
        <xs:annotation>
          <xs:documentation>This tag captures the instrument inherent solvent (usually water)
            suppression method used during acquisition.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="spinningRate" type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="relaxationDelay" type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="pulseSequence" type="PulseSequenceType">
        <xs:annotation>
          <xs:documentation>A description of the pulse sequence using CV params/terms, and reference
            to the pulse sequence file if the source is available. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="shapedPulseFile" type="SourceFileRefType">
        <xs:annotation>
          <xs:documentation>A reference to the pulse shape file, from the power section of the
            Bruker acquisition software. Example: gauss</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="numberOfSteadyStateScans" type="xs:integer" use="required"/>
    <xs:attribute name="numberOfScans" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="AcquisitionParameterSet1DType">
    <xs:complexContent>
      <xs:extension base="AcquisitionParameterSetType">
        <xs:sequence>
          <xs:element name="DirectDimensionParameterSet" type="AcquisitionDimensionParameterSetType"
          />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AcquisitionParameterSetMultiDType">
    <xs:complexContent>
      <xs:extension base="AcquisitionParameterSetType">
        <xs:sequence>
          <xs:element minOccurs="0" name="hadamardParameterSet">
            <xs:annotation>
              <xs:documentation>TODO needs to be a list of frequencies, but could allow for other
                parameters. </xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="hadamardFrequency"
                  type="ValueWithUnitType">
                  <xs:annotation>
                    <xs:documentation>Required if and only if the encoding type is
                      Hadamard.</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="directDimensionParameterSet" type="AcquisitionDimensionParameterSetType"/>
          <xs:element minOccurs="1" name="encodingScheme" type="CVParamType">
            <xs:annotation>
              <xs:documentation>Quadrature detection method.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="indirectDimensionParameterSet"
            type="AcquisitionDimensionParameterSetType">
            <xs:annotation>
              <xs:documentation>Required once for each indirect dimension that is
                measured.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType mixed="false" name="PulseSequenceType">
    <xs:annotation>
      <xs:documentation>A list of references to the source files that define the pulse sequence,
        including pulse shape files, pulse sequence source code, pulse sequence parameter files,
        etc.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ParamGroupType">
        <xs:sequence minOccurs="0">
          <xs:element name="pulseSequenceFileRefList">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="pulseSequenceFileRef" type="SourceFileRefType"
                  maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="AcquisitionType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="1" name="acquisition1D" type="Acquisition1DType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="acquisitionMultiD" type="AcquisitionMultiDType">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Acquisition1DType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="1" name="acquisitionParameterSet"
        type="AcquisitionParameterSet1DType">
        <xs:annotation>
          <xs:documentation>Note, steady state scan is also know as dummy scan.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fidData" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The FID is stored here as a binary blob. Byte ordering is always little
            endian (Intel style). Computers using a different endian style must convert to/from
            little endian when writing/reading nmrML. The FID should be converted into a Complex64
            array before encoding. The base64 encoded binary data. The byte order is always 'little
            endian'.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AcquisitionMultiDType">
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="1" name="acquisitionParameterSet"
        type="AcquisitionParameterSetMultiDType"> </xs:element>
      <xs:element name="fidData" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The FID is stored here as a binary blob. Byte ordering is always little
            endian (Intel style). Computers using a different endian style must convert to/from
            little endian when writing/reading nmrML. The FID should be converted into a Complex64
            array before encoding. The base64 encoded binary data. The byte order is always 'little
            endian'.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SpectrumListType">
    <xs:annotation>
      <xs:documentation>List and descriptions of spectra.</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="spectrum1D" type="Spectrum1DType"/>
      <xs:element name="spectrumMultiD" type="SpectrumMultiDType" maxOccurs="unbounded"
        minOccurs="0"/>
    </xs:choice>
    <xs:attribute name="count" type="xs:nonNegativeInteger" use="required">
      <xs:annotation>
        <xs:documentation>The number of spectra defined in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="defaultDataProcessingRef" type="xs:IDREF" use="required">
      <xs:annotation>
        <xs:documentation>This attribute MUST reference the 'id' of the default data processing for
          the spectrum list. If an acquisition does not reference any data processing, it implicitly
          refers to this data processing. This attribute is required because the minimum amount of
          data processing that any format will undergo is "conversion to nmrML".</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SpectrumType">
    <xs:annotation>
      <xs:documentation>A spectrum that is the result of processing the acquisition and a
        description of the process used to create it.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="unbounded" minOccurs="1" name="processingSoftwareRefList"
        type="SoftwareRefListType"> </xs:element>
      <xs:element name="processingContactRefList" type="ContactRefListType"/>
      <xs:element maxOccurs="1" minOccurs="1" name="spectrumDataArray" type="BinaryDataArrayType">
        <xs:annotation>
          <xs:documentation>The 1D spectrum is represented as either a set of y-axis values at equal
            x-axis intervals or a set of (x,y) pairs.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xAxis" type="AxisWithUnitType"/>
      <xs:element name="yAxisType" type="CVTermType"/>
      <xs:element name="processingParameterSet">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="postAcquisitionSolventSuppressionMethod" type="CVTermType">
              <xs:annotation>
                <xs:documentation>The method used for post acquisition solvent
                  suppression.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="calibrationCompound" type="CVTermType"/>
            <xs:element name="dataTransformationMethod" type="CVTermType">
              <xs:annotation>
                <xs:documentation>The method used for time-based to frequency-based data
                  tranformation.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="numberOfDataPoints" type="xs:integer" use="required"/>
  </xs:complexType>
  <xs:complexType name="Spectrum1DType">
    <xs:complexContent>
      <xs:extension base="SpectrumType">
        <xs:sequence>
          <xs:element name="firstDimensionProcessingParameterSet"
            type="FirstDimensionProcessingParameterSetType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SpectrumMultiDType">
    <xs:complexContent>
      <xs:extension base="SpectrumType">
        <xs:sequence>
          <xs:element name="firstDimensionProcessingParameterSet"
            type="FirstDimensionProcessingParameterSetType"/>
          <xs:element maxOccurs="2" name="higherDimensionProcessingParameterSet"
            type="HigherDimensionProcessingParameterSetType"/>
          <xs:element maxOccurs="1" minOccurs="0" name="projected3DProcessingParamaterSet"
            type="Projected3DProcessingParamaterSetType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="SpectralProcessingParameterSetType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a
        spectra.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="unbounded" minOccurs="1" name="processingSoftwareRefList"
        type="SoftwareRefListType"> </xs:element>
      <xs:element name="postAcquisitionSolventSuppressionMethod" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The method used for post acquisition solvent
            suppression.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dataTransformationMethod" type="CVTermType">
        <xs:annotation>
          <xs:documentation>The method used for time-based to frequency-based data
            tranformation.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="calibrationCompound" type="CVTermType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SpectralProjectionParameterSetType">
    <xs:sequence>
      <xs:element name="projectionMethod" type="CVTermType"/>
    </xs:sequence>
    <xs:attribute name="projectionAxis"/>
  </xs:complexType>
  <xs:complexType name="SpectralProcessingParameterSet2DType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a 2D
        spectra.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="SpectralProcessingParameterSetType">
        <xs:sequence maxOccurs="1" minOccurs="1">
          <xs:element maxOccurs="1" minOccurs="1" name="directDimensionParameterSet"
            type="FirstDimensionProcessingParameterSetType"> </xs:element>
          <xs:element maxOccurs="2" minOccurs="1" name="higherDimensionParameterSet"
            type="HigherDimensionProcessingParameterSetType"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="FirstDimensionProcessingParameterSetType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a spectra that
        are specific to a dimension.</xs:documentation>
    </xs:annotation>
    <xs:sequence maxOccurs="1" minOccurs="1">
      <xs:element maxOccurs="1" minOccurs="0" name="zeroOrderPhaseCorrection"
        type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="0" name="firstOrderPhaseCorrection"
        type="ValueWithUnitType"> </xs:element>
      <xs:element maxOccurs="1" minOccurs="1" name="calibrationReferenceShift"
        type="ValueWithUnitType"> </xs:element>
      <xs:element name="spectralDenoisingMethod" type="CVTermType"/>
      <xs:element maxOccurs="unbounded" minOccurs="1" name="windowFunction">
        <xs:complexType>
          <xs:sequence maxOccurs="1" minOccurs="1">
            <xs:element name="windowFunctionMethod" type="CVTermType"/>
            <xs:element maxOccurs="unbounded" minOccurs="1" name="windowFunctionParameter"
              type="CVParamType">
              <xs:annotation>
                <xs:documentation>The parameters used in the window function
                  method.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="baselineCorrectionMethod" type="CVTermType"/>
      <xs:element name="parameterFileRef" type="SourceFileRefType"/>
    </xs:sequence>
    <xs:attribute name="noOfDataPoints" type="xs:integer" use="required">
      <xs:annotation>
        <xs:documentation>This number will also reflect the zero filling.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AxisWithUnitType">
    <xs:attribute name="unitAccession" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV accession number for the unit term associated with the
          value, if any (e.g., 'UO:0000266' for 'electron volt').</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An optional CV name for the unit accession number, if any (e.g., 'electron
          volt' for 'UO:0000266' ).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unitCvRef" type="xs:IDREF" use="optional">
      <xs:annotation>
        <xs:documentation>If a unit term is referenced, this attribute must refer to the CV 'id'
          attribute defined in the cvList in this nmrML file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="startValue"/>
    <xs:attribute name="endValue"/>
  </xs:complexType>
  <xs:complexType name="HigherDimensionProcessingParameterSetType">
    <xs:annotation>
      <xs:documentation>Parameters recorded when raw data set is processed to create a spectra that
        are specific to the second dimension.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="FirstDimensionProcessingParameterSetType"> </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Projected3DProcessingParamaterSetType">
    <xs:attribute name="projectionAngle" type="xs:double"/>
    <xs:attribute name="positiveProjectionMethod" type="xs:boolean"/>
  </xs:complexType>
</xs:schema>
